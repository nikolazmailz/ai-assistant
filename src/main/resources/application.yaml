# ======= Server =======
server:
  port: 8080
#  compression:
#    enabled: true
#    min-response-size: 2KB
#  http2:
#    enabled: true
#  shutdown: graceful
#  forward-headers-strategy: framework
#  error:
#    include-message: never
#    include-binding-errors: never

spring:
  application:
    name: ai-assistant
  # Для WebFlux специфичных настроек отдельный блок не требуется
#  jackson:
#    # Дефолтная таймзона сериализации дат
#    time-zone: Europe/Moscow
#    default-property-inclusion: non_null
#    serialization:
#      write-dates-as-timestamps: false

  # --- R2DBC: основное (reactive) подключение ---
  r2dbc:
    url: ${R2DBC_URL:r2dbc:postgresql://postgres:5432/ai_assistant}
    username: ${POSTGRES_USER:}
    password: ${POSTGRES_PASSWORD:}
#    pool:
#      # включай, только если добавишь зависимость r2dbc-pool (см. ниже)
#      enabled: ${R2DBC_POOL_ENABLED:false}
#      initial-size: ${R2DBC_POOL_INITIAL_SIZE:2}
#      max-size: ${R2DBC_POOL_MAX_SIZE:10}
#      max-idle-time: ${R2DBC_POOL_MAX_IDLE:30s}

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
    url: ${JDBC_URL:jdbc:postgresql://postgres:5432/ai_assistant}
    user: ${POSTGRES_USER:}
    password: ${POSTGRES_PASSWORD:}


# ======= Management / Actuator =======
management:
  server:
    port: 8080
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
#      show-details: when_authorized
      probes:
        enabled: true
      group:
        readiness:
          include: r2dbc, liquibase # readinessState
        liveness:
          include: ping # livenessState
#  health:
#    defaults:
#      enabled: true


# ======= App placeholders (на будущее) =======
app:
  telegram:
    bot-token: ${TG_BOT_TOKEN:}
    webhook-secret: ${TG_WEBHOOK_SECRET:}
  openai:
    token: ${OPENAI_TOKEN:}
  proxy:
    host: ${PROXY_HOST:}
    port: ${PROXY_PORT:}
    user: ${PROXY_USER:}
    password: ${PROXY_PASSWORD:}

  timezone: Europe/Moscow



# ======= Logging =======
logging:
  level:
    ru.ai: DEBUG
    root: INFO
    org.springframework.web: INFO
    reactor.netty.http.client: WARN
    reactor.netty.http.server: WARN
